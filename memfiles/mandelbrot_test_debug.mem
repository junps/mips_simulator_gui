   0:                      : addi $sp, $sp, 20
   4:                      : j _min_caml_start
   8: dbl.38               : add.s $f0, $f0, $f0
   c:                      : jr $ra
  10: iloop.54             : addi $t8, $zero, 0
  14:                      : sub $t9, $v0, $t8
  18:                      : bne $zero, $t9, beq_else.117
  1c:                      : addi $v0, $zero, 1
  20:                      : j min_caml_print_int
  24: beq_else.117         : sub.s $f0, $f0, $f1
  28:                      : add.s $f0, $f0, $f3
  2c:                      : sw.s $f3, 0($sp)
  30:                      : sw $v0, 8($sp)
  34:                      : sw.s $f0, 16($sp)
  38:                      : sw.s $f4, 24($sp)
  3c:                      : sw.s $f2, 32($sp)
  40:                      : add $t8, $zero, $ra
  44:                      : sw $t8, 44($sp)
  48:                      : addi $sp, $sp, 48
  4c:                      : jal dbl.38
  50:                      : addi $sp, $sp, -48
  54:                      : lw $t8, 44($sp)
  58:                      : add $ra, $zero, $t8
  5c:                      : lw.s $f2, 32($sp)
  60:                      : mul.s $f0, $f0, $f2
  64:                      : lw.s $f4, 24($sp)
  68:                      : add.s $f2, $f0, $f4
  6c:                      : lw.s $f0, 16($sp)
  70:                      : mul.s $f0, $f0, $f0
  74:                      : mul.s $f1, $f2, $f2
  78:                      : add.s $f3, $f0, $f1
  7c:                      : c.lt.s0, $f5, $f3
  80:                      : bts 0, fble_else.119
  84:                      : lw $v0, 8($sp)
  88:                      : addi $v0, $v0, -1
  8c:                      : lw.s $f3, 0($sp)
  90:                      : j iloop.54
  94: fble_else.119        : addi $v0, $zero, 0
  98:                      : j min_caml_print_int
  9c: xloop.44             : addi $t8, $zero, 400
  a0:                      : slt$t9, $v0, $t8
  a4:                      : bne $zero, $t9, ble_else.120
  a8:                      : jr $ra
  ac: ble_else.120         : sw $v0, 0($sp)
  b0:                      : sw $v1, 4($sp)
  b4:                      : add $t8, $zero, $ra
  b8:                      : sw $t8, 12($sp)
  bc:                      : addi $sp, $sp, 16
  c0:                      : jal min_caml_float_of_int
  c4:                      : addi $sp, $sp, -16
  c8:                      : lw $t8, 12($sp)
  cc:                      : add $ra, $zero, $t8
  d0:                      : add $t8, $zero, $ra
  d4:                      : sw $t8, 12($sp)
  d8:                      : addi $sp, $sp, 16
  dc:                      : jal dbl.38
  e0:                      : addi $sp, $sp, -16
  e4:                      : lw $t8, 12($sp)
  e8:                      : add $ra, $zero, $t8
  ec:                      : div.s $f0, $f0, $f2
  f0:                      : sub.s $f0, $f0, $f2
  f4:                      : lw $v0, 4($sp)
  f8:                      : sw.s $f0, 8($sp)
  fc:                      : add $t8, $zero, $ra
 100:                      : sw $t8, 20($sp)
 104:                      : addi $sp, $sp, 24
 108:                      : jal min_caml_float_of_int
 10c:                      : addi $sp, $sp, -24
 110:                      : lw $t8, 20($sp)
 114:                      : add $ra, $zero, $t8
 118:                      : add $t8, $zero, $ra
 11c:                      : sw $t8, 20($sp)
 120:                      : addi $sp, $sp, 24
 124:                      : jal dbl.38
 128:                      : addi $sp, $sp, -24
 12c:                      : lw $t8, 20($sp)
 130:                      : add $ra, $zero, $t8
 134:                      : div.s $f0, $f0, $f2
 138:                      : sub.s $f4, $f0, $f2
 13c:                      : addi $v0, $zero, 1000
 140:                      : lw.s $f3, 8($sp)
 144:                      : add $t8, $zero, $ra
 148:                      : sw $t8, 20($sp)
 14c:                      : addi $sp, $sp, 24
 150:                      : jal iloop.54
 154:                      : addi $sp, $sp, -24
 158:                      : lw $t8, 20($sp)
 15c:                      : add $ra, $zero, $t8
 160:                      : lw $v0, 0($sp)
 164:                      : addi $v0, $v0, 1
 168:                      : lw $v1, 4($sp)
 16c:                      : j xloop.44
 170: yloop.40             : addi $t8, $zero, 400
 174:                      : slt$t9, $v0, $t8
 178:                      : bne $zero, $t9, ble_else.122
 17c:                      : jr $ra
 180: ble_else.122         : addi $v1, $zero, 0
 184:                      : sw $v0, 0($sp)
 188:                      : add $t8, $zero, $ra
 18c:                      : add $s6, $zero, $v1
 190:                      : add $v1, $zero, $v0
 194:                      : add $v0, $zero, $s6
 198:                      : sw $t8, 4($sp)
 19c:                      : addi $sp, $sp, 8
 1a0:                      : jal xloop.44
 1a4:                      : addi $sp, $sp, -8
 1a8:                      : lw $t8, 4($sp)
 1ac:                      : add $ra, $zero, $t8
 1b0:                      : lw $v0, 0($sp)
 1b4:                      : addi $v0, $v0, 1
 1b8:                      : j yloop.40
 1bc: _min_caml_start      : addi $v0, $zero, 0
 1c0:                      : add $t8, $zero, $ra
 1c4:                      : sw $t8, 4($sp)
 1c8:                      : addi $sp, $sp, 8
 1cc:                      : jal yloop.40
 1d0:                      : addi $sp, $sp, -8
 1d4:                      : lw $t8, 4($sp)
 1d8:                      : add $ra, $zero, $t8
 1dc:                      : j loop
 1e0: min_caml_float_of_int: itof $f0, $v0
 1e4:                      : jr $ra
 1e8: min_caml_print_int   : out $v0
 1ec:                      : jr $ra
 1f0: loop                 : j loop
